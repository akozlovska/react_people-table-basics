{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","Personlink","person","slug","sex","name","PeopleTable","people","useParams","getPersonByName","find","pers","useEffect","selectedPerson","document","querySelector","scrollIntoView","block","behavior","window","scrollTo","top","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadingError","setIsLoadingError","catch","finally","length","Root","path","element","index","replace","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.ed7fae7c.chunk.js","sourcesContent":["import './App.scss';\nimport cn from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">Home</NavLink>\n\n          <NavLink className={getLinkClass} to=\"people\">People</NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const Personlink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Personlink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  function getPersonByName(name: string) {\n    return people.find(pers => pers.name === name);\n  }\n\n  useEffect(() => {\n    const selectedPerson = document.querySelector('.has-background-warning');\n\n    if (selectedPerson) {\n      selectedPerson.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    } else {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, [slug]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={cn({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <Personlink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.motherName ? (\n                <>\n                  {getPersonByName(person.motherName) ? (\n                    <Personlink\n                      person={getPersonByName(person.motherName) as Person}\n                    />\n                  ) : (\n                    <>\n                      {person.motherName}\n                    </>\n                  )}\n                </>\n              ) : (\n                '-'\n              )}\n            </td>\n            <td>\n              {person.fatherName ? (\n                <>\n                  {getPersonByName(person.fatherName) ? (\n                    <Personlink\n                      person={getPersonByName(person.fatherName) as Person}\n                    />\n                  ) : (\n                    <>\n                      {person.fatherName}\n                    </>\n                  )}\n                </>\n              ) : (\n                '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {isLoadingError ? (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              ) : (\n                <>\n                  {people.length ? (\n                    <PeopleTable people={people} />\n                  ) : (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}